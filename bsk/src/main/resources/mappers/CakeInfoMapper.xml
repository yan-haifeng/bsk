<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zime.bsk.dao.CakeInfoMapper">
  <resultMap id="BaseResultMap" type="com.zime.bsk.entity.CakeInfo">
    <id column="cake_id" jdbcType="INTEGER" property="cakeId" />
    <result column="cake_name" jdbcType="VARCHAR" property="cakeName" />
    <result column="cake_ename" jdbcType="VARCHAR" property="cakeEname" />
    <result column="cake_img" jdbcType="VARCHAR" property="cakeImg" />
    <result column="cake_classid" jdbcType="INTEGER" property="cakeClassid" />
    <result column="cake_classminid" jdbcType="INTEGER" property="cakeClassminid" />
    <result column="cake_specsid" jdbcType="INTEGER" property="cakeSpecsid" />
    <result column="cake_num" jdbcType="INTEGER" property="cakeNum" />
    <result column="cake_info" jdbcType="VARCHAR" property="cakeInfo" />
    <result column="cake_discount" jdbcType="DOUBLE" property="cakeDiscount" />
    <result column="cake_discountday" jdbcType="INTEGER" property="cakeDiscountday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cake_id, cake_name, cake_ename, cake_img, cake_classid, cake_classminid, cake_specsid, 
    cake_num, cake_info, cake_discount, cake_discountday
  </sql>
  <select id="selectByExample" parameterType="com.zime.bsk.entity.CakeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from cakeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cakeinfo
    where cake_id = #{cakeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cakeinfo
    where cake_id = #{cakeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zime.bsk.entity.CakeInfoExample">
    delete from cakeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zime.bsk.entity.CakeInfo">
    insert into cakeinfo (cake_id, cake_name, cake_ename, 
      cake_img, cake_classid, cake_classminid, 
      cake_specsid, cake_num, cake_info, 
      cake_discount, cake_discountday)
    values (#{cakeId,jdbcType=INTEGER}, #{cakeName,jdbcType=VARCHAR}, #{cakeEname,jdbcType=VARCHAR}, 
      #{cakeImg,jdbcType=VARCHAR}, #{cakeClassid,jdbcType=INTEGER}, #{cakeClassminid,jdbcType=INTEGER}, 
      #{cakeSpecsid,jdbcType=INTEGER}, #{cakeNum,jdbcType=INTEGER}, #{cakeInfo,jdbcType=VARCHAR}, 
      #{cakeDiscount,jdbcType=DOUBLE}, #{cakeDiscountday,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zime.bsk.entity.CakeInfo">
    insert into cakeinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cakeId != null">
        cake_id,
      </if>
      <if test="cakeName != null">
        cake_name,
      </if>
      <if test="cakeEname != null">
        cake_ename,
      </if>
      <if test="cakeImg != null">
        cake_img,
      </if>
      <if test="cakeClassid != null">
        cake_classid,
      </if>
      <if test="cakeClassminid != null">
        cake_classminid,
      </if>
      <if test="cakeSpecsid != null">
        cake_specsid,
      </if>
      <if test="cakeNum != null">
        cake_num,
      </if>
      <if test="cakeInfo != null">
        cake_info,
      </if>
      <if test="cakeDiscount != null">
        cake_discount,
      </if>
      <if test="cakeDiscountday != null">
        cake_discountday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cakeId != null">
        #{cakeId,jdbcType=INTEGER},
      </if>
      <if test="cakeName != null">
        #{cakeName,jdbcType=VARCHAR},
      </if>
      <if test="cakeEname != null">
        #{cakeEname,jdbcType=VARCHAR},
      </if>
      <if test="cakeImg != null">
        #{cakeImg,jdbcType=VARCHAR},
      </if>
      <if test="cakeClassid != null">
        #{cakeClassid,jdbcType=INTEGER},
      </if>
      <if test="cakeClassminid != null">
        #{cakeClassminid,jdbcType=INTEGER},
      </if>
      <if test="cakeSpecsid != null">
        #{cakeSpecsid,jdbcType=INTEGER},
      </if>
      <if test="cakeNum != null">
        #{cakeNum,jdbcType=INTEGER},
      </if>
      <if test="cakeInfo != null">
        #{cakeInfo,jdbcType=VARCHAR},
      </if>
      <if test="cakeDiscount != null">
        #{cakeDiscount,jdbcType=DOUBLE},
      </if>
      <if test="cakeDiscountday != null">
        #{cakeDiscountday,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zime.bsk.entity.CakeInfoExample" resultType="java.lang.Long">
    select count(*) from cakeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cakeinfo
    <set>
      <if test="record.cakeId != null">
        cake_id = #{record.cakeId,jdbcType=INTEGER},
      </if>
      <if test="record.cakeName != null">
        cake_name = #{record.cakeName,jdbcType=VARCHAR},
      </if>
      <if test="record.cakeEname != null">
        cake_ename = #{record.cakeEname,jdbcType=VARCHAR},
      </if>
      <if test="record.cakeImg != null">
        cake_img = #{record.cakeImg,jdbcType=VARCHAR},
      </if>
      <if test="record.cakeClassid != null">
        cake_classid = #{record.cakeClassid,jdbcType=INTEGER},
      </if>
      <if test="record.cakeClassminid != null">
        cake_classminid = #{record.cakeClassminid,jdbcType=INTEGER},
      </if>
      <if test="record.cakeSpecsid != null">
        cake_specsid = #{record.cakeSpecsid,jdbcType=INTEGER},
      </if>
      <if test="record.cakeNum != null">
        cake_num = #{record.cakeNum,jdbcType=INTEGER},
      </if>
      <if test="record.cakeInfo != null">
        cake_info = #{record.cakeInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.cakeDiscount != null">
        cake_discount = #{record.cakeDiscount,jdbcType=DOUBLE},
      </if>
      <if test="record.cakeDiscountday != null">
        cake_discountday = #{record.cakeDiscountday,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cakeinfo
    set cake_id = #{record.cakeId,jdbcType=INTEGER},
      cake_name = #{record.cakeName,jdbcType=VARCHAR},
      cake_ename = #{record.cakeEname,jdbcType=VARCHAR},
      cake_img = #{record.cakeImg,jdbcType=VARCHAR},
      cake_classid = #{record.cakeClassid,jdbcType=INTEGER},
      cake_classminid = #{record.cakeClassminid,jdbcType=INTEGER},
      cake_specsid = #{record.cakeSpecsid,jdbcType=INTEGER},
      cake_num = #{record.cakeNum,jdbcType=INTEGER},
      cake_info = #{record.cakeInfo,jdbcType=VARCHAR},
      cake_discount = #{record.cakeDiscount,jdbcType=DOUBLE},
      cake_discountday = #{record.cakeDiscountday,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zime.bsk.entity.CakeInfo">
    update cakeinfo
    <set>
      <if test="cakeName != null">
        cake_name = #{cakeName,jdbcType=VARCHAR},
      </if>
      <if test="cakeEname != null">
        cake_ename = #{cakeEname,jdbcType=VARCHAR},
      </if>
      <if test="cakeImg != null">
        cake_img = #{cakeImg,jdbcType=VARCHAR},
      </if>
      <if test="cakeClassid != null">
        cake_classid = #{cakeClassid,jdbcType=INTEGER},
      </if>
      <if test="cakeClassminid != null">
        cake_classminid = #{cakeClassminid,jdbcType=INTEGER},
      </if>
      <if test="cakeSpecsid != null">
        cake_specsid = #{cakeSpecsid,jdbcType=INTEGER},
      </if>
      <if test="cakeNum != null">
        cake_num = #{cakeNum,jdbcType=INTEGER},
      </if>
      <if test="cakeInfo != null">
        cake_info = #{cakeInfo,jdbcType=VARCHAR},
      </if>
      <if test="cakeDiscount != null">
        cake_discount = #{cakeDiscount,jdbcType=DOUBLE},
      </if>
      <if test="cakeDiscountday != null">
        cake_discountday = #{cakeDiscountday,jdbcType=INTEGER},
      </if>
    </set>
    where cake_id = #{cakeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zime.bsk.entity.CakeInfo">
    update cakeinfo
    set cake_name = #{cakeName,jdbcType=VARCHAR},
      cake_ename = #{cakeEname,jdbcType=VARCHAR},
      cake_img = #{cakeImg,jdbcType=VARCHAR},
      cake_classid = #{cakeClassid,jdbcType=INTEGER},
      cake_classminid = #{cakeClassminid,jdbcType=INTEGER},
      cake_specsid = #{cakeSpecsid,jdbcType=INTEGER},
      cake_num = #{cakeNum,jdbcType=INTEGER},
      cake_info = #{cakeInfo,jdbcType=VARCHAR},
      cake_discount = #{cakeDiscount,jdbcType=DOUBLE},
      cake_discountday = #{cakeDiscountday,jdbcType=INTEGER}
    where cake_id = #{cakeId,jdbcType=INTEGER}
  </update>
</mapper>